package english.grammars;

import com.avaya.runtime.platforms.Toolkit;
import com.avaya.sce.runtime.GrammarItem;
import com.avaya.sce.runtime.GrammarRule;

import flow.IProjectVariables;

/**
 * This class is generated only initially.  It is expected that the developer
 * will edit this class can generate the necessary grammar.  The constructor will be regenerated
 * Last generated by Orchestration Designer at: 2024-JAN-05  12:19:10 PM
 */
public class MGr extends com.avaya.sce.runtime.DynamicGrammar {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	* Constructor for MGr.  This method will be regenerated, put your initialization
	* logic in the init() method.
	*/
	public MGr() {
		//{{START:CLASS:CONSTRUCTOR
        setMode("dtmf");
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	* Method buildGrammar.  Subclasses must implement this method  and return an XML grammar.
	* To return a SRGS grammar, for Example,
	* <pre>
	*     <grammar type=" application / srgs + xml " root=" command " xml:lang=" en - US " version=" 1.0 ">
	*       <rule id=" command " scope=" public ">
	*          <one-of>
	*          <item>visa</item>
	*          <item>master</item>
	*          <item>master card</item>
	*          <item>amex</item>
	*          <item>american express</item>
	*          </one-of>
	*       </rule>
	*     </grammar>
	* </pre>
	* is the result of using the the grammar api as follows:
	* <pre>
	*  public void buildGrammar( SCESession mySession ) {
	*      com.avaya.sce.runtime.GrammarRule rule = new com.avaya.sce.runtime.GrammarRule();
	*      rule.add( new com.avaya.sce.runtime.GrammarItem( "visa" ) );
	*      rule.add( new com.avaya.sce.runtime.GrammarItem( "master card" ) );
	*      rule.add( new com.avaya.sce.runtime.GrammarItem( "amex" ) );
	*      rule.add( new com.avaya.sce.runtime.GrammarItem( "american express" ) );
	*      add( rule );
	*  }
	* </pre>
	*
	* To return a Google Speech grammar, for Example,
	* <pre>
	*  public void buildGrammar( SCESession mySession ) {
	*      setRawGrammarStr("<![CDATA[" + 
	*						"{ \"provider\": \"google\"}" + 
	*						"]]>");
	*  }
	* to produce the following:
	*<grammar mode="voice" type ="application/avaya-ep-csr" xml:lang="en-us">
	*	<![CDATA[
	*		{ "provider": "google"}
	*	]]>
	*</grammar>
	* </pre>
	* @return void
	* @see com.avaya.sce.runtime.DynamicGrammar#buildGrammar()
	*/
	public void buildGrammar(com.avaya.sce.runtimecommon.SCESession mySession) {
		
		String gm = mySession.getVariableField(IProjectVariables.USER_STORE,IProjectVariables.USER_STORE_FIELD_GRAMMAR).getStringValue();
		String[] gram = gm.split(",");
		com.avaya.sce.runtime.GrammarRule rule = new com.avaya.sce.runtime.GrammarRule();
		
		for(int i=0;i<gram.length;i++) {
			
			rule.add( new com.avaya.sce.runtime.GrammarItem(gram[i].trim()));
			
		}
		add(rule);
		
	}

}
