package flow;

/**
 * This is a special reserved class that is repsonsible for loading application 
 * variables as well as the forward to the actual first form of the application.<br>
 * This class should not be manually edited as changes may be overridden by the 
 * code generator.<br>
 * Last generated by Orchestration Designer at: 2023-DEC-27  02:38:02 PM
 */
public class Start extends com.avaya.sce.runtime.Entry {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2023-DEC-27  02:38:02 PM
	 */
	public Start() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * This method is generated automatically.  Any changes may be overwritten.
	 * Returns the submit object that will redirect application flow to the first
	 * form in the application.  This also adds various standard variables to the
	 * list of data to be submitted to the runtime variable table.
	 * Last generated by Orchestration Designer at: 2024-FEB-08  04:57:48 PM
	 * @return the Submit object that contains the standard variables and the first form
	 */
	public com.avaya.sce.runtime.Submit getSubmit(com.avaya.sce.runtimecommon.SCESession mySession) {
		com.avaya.sce.runtime.Submit submit = new com.avaya.sce.runtime.Submit("PropertyLoad");
		return ( submit );
	}
	/**
	 * This method initializes the SCE session with the variables that
	 * are defined in the application.<BR>
	 * 
	 * This method is generated automatically and should not be manually
	 * edited because changes may be overwritten by future code 
	 * generation.
	 * Last generated by Orchestration Designer at: 2024-FEB-08  04:57:48 PM
	 */
	public void initializeVariables(com.avaya.sce.runtimecommon.SCESession session) {
		com.avaya.sce.runtimecommon.IVariable variable = null;
		String[] variableFields = null;

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.ACCOUNT, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.RESPONSE_CODE, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ENT_CUSTOMER_ID_FIELD_CONFIDENCE,
			IProjectVariables.ENT_CUSTOMER_ID_FIELD_INPUTMODE,
			IProjectVariables.ENT_CUSTOMER_ID_FIELD_INTERPRETATION,
			IProjectVariables.ENT_CUSTOMER_ID_FIELD_NOINPUTCOUNT,
			IProjectVariables.ENT_CUSTOMER_ID_FIELD_NOMATCHCOUNT,
			IProjectVariables.ENT_CUSTOMER_ID_FIELD_UTTERANCE,
			IProjectVariables.ENT_CUSTOMER_ID_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ENT_CUSTOMER_ID, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.UNTITLED_FIELD_UNTITLED };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.UNTITLED, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.MAX_TRIES, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.ACCOUNT_BAL, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.CHECK_LANGUAGE_PREFRENCE, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.REDIRECTINFO_FIELD_PRESENTATIONINFO,
			IProjectVariables.REDIRECTINFO_FIELD_REASON,
			IProjectVariables.REDIRECTINFO_FIELD_SCREENINGINFO,
			IProjectVariables.REDIRECTINFO_FIELD_URI };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.REDIRECTINFO, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.LANGUAGE_PREFERENCE, "en", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.START_TIME, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.GLOBAL_MENU_FIELD_CONFIDENCE,
			IProjectVariables.GLOBAL_MENU_FIELD_INPUTMODE,
			IProjectVariables.GLOBAL_MENU_FIELD_INTERPRETATION,
			IProjectVariables.GLOBAL_MENU_FIELD_NOINPUTCOUNT,
			IProjectVariables.GLOBAL_MENU_FIELD_NOMATCHCOUNT,
			IProjectVariables.GLOBAL_MENU_FIELD_UTTERANCE,
			IProjectVariables.GLOBAL_MENU_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.GLOBAL_MENU, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.UPDATE_LANG, "false", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.EXIT_LOCATION, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ENT_COMFIRM_PIN_FIELD_CONFIDENCE,
			IProjectVariables.ENT_COMFIRM_PIN_FIELD_INPUTMODE,
			IProjectVariables.ENT_COMFIRM_PIN_FIELD_INTERPRETATION,
			IProjectVariables.ENT_COMFIRM_PIN_FIELD_NOINPUTCOUNT,
			IProjectVariables.ENT_COMFIRM_PIN_FIELD_NOMATCHCOUNT,
			IProjectVariables.ENT_COMFIRM_PIN_FIELD_UTTERANCE,
			IProjectVariables.ENT_COMFIRM_PIN_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ENT_COMFIRM_PIN, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ENT_ACCOUNT_NUM_FIELD_CONFIDENCE,
			IProjectVariables.ENT_ACCOUNT_NUM_FIELD_INPUTMODE,
			IProjectVariables.ENT_ACCOUNT_NUM_FIELD_INTERPRETATION,
			IProjectVariables.ENT_ACCOUNT_NUM_FIELD_NOINPUTCOUNT,
			IProjectVariables.ENT_ACCOUNT_NUM_FIELD_NOMATCHCOUNT,
			IProjectVariables.ENT_ACCOUNT_NUM_FIELD_UTTERANCE,
			IProjectVariables.ENT_ACCOUNT_NUM_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ENT_ACCOUNT_NUM, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ATM_FIELD_CARD_ID,
			IProjectVariables.ATM_FIELD_CARD_NUMBER,
			IProjectVariables.ATM_FIELD_CVV,
			IProjectVariables.ATM_FIELD_EXPIRY_DATE,
			IProjectVariables.ATM_FIELD_PIN,
			IProjectVariables.ATM_FIELD_USER };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ATM, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.UC_ID, "ASBAJ9087642", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.DATE_FIELD_AUDIO,
			IProjectVariables.DATE_FIELD_DAYOFMONTH,
			IProjectVariables.DATE_FIELD_DAYOFWEEK,
			IProjectVariables.DATE_FIELD_DAYOFWEEKNUM,
			IProjectVariables.DATE_FIELD_DAYOFYEAR,
			IProjectVariables.DATE_FIELD_MONTH,
			IProjectVariables.DATE_FIELD_MONTHINYEAR,
			IProjectVariables.DATE_FIELD_YEAR };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.DATE, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.NICOUNT, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ENTER_CARD_NUM_FIELD_CONFIDENCE,
			IProjectVariables.ENTER_CARD_NUM_FIELD_INPUTMODE,
			IProjectVariables.ENTER_CARD_NUM_FIELD_INTERPRETATION,
			IProjectVariables.ENTER_CARD_NUM_FIELD_NOINPUTCOUNT,
			IProjectVariables.ENTER_CARD_NUM_FIELD_NOMATCHCOUNT,
			IProjectVariables.ENTER_CARD_NUM_FIELD_UTTERANCE,
			IProjectVariables.ENTER_CARD_NUM_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ENTER_CARD_NUM, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.MAIN_MENU_FIELD_CONFIDENCE,
			IProjectVariables.MAIN_MENU_FIELD_INPUTMODE,
			IProjectVariables.MAIN_MENU_FIELD_INTERPRETATION,
			IProjectVariables.MAIN_MENU_FIELD_NOINPUTCOUNT,
			IProjectVariables.MAIN_MENU_FIELD_NOMATCHCOUNT,
			IProjectVariables.MAIN_MENU_FIELD_UTTERANCE,
			IProjectVariables.MAIN_MENU_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.MAIN_MENU, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.PIN, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.ENT_PIN_RETRY, "0", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ENT_CVV_FIELD_CONFIDENCE,
			IProjectVariables.ENT_CVV_FIELD_INPUTMODE,
			IProjectVariables.ENT_CVV_FIELD_INTERPRETATION,
			IProjectVariables.ENT_CVV_FIELD_NOINPUTCOUNT,
			IProjectVariables.ENT_CVV_FIELD_NOMATCHCOUNT,
			IProjectVariables.ENT_CVV_FIELD_UTTERANCE,
			IProjectVariables.ENT_CVV_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ENT_CVV, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.NINM, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.TRIES_FIELD_UNTITLED };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.TRIES, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.REGISTERED_MOBILE_NUMBER, "6354267898", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.SESSION_FIELD_AAI,
			IProjectVariables.SESSION_FIELD_ANI,
			IProjectVariables.SESSION_FIELD_CALLTAG,
			IProjectVariables.SESSION_FIELD_CHANNEL,
			IProjectVariables.SESSION_FIELD_CHANNELTYPE,
			IProjectVariables.SESSION_FIELD_CONVERSEFIRST,
			IProjectVariables.SESSION_FIELD_CONVERSESECOND,
			IProjectVariables.SESSION_FIELD_CURRENTLANGUAGE,
			IProjectVariables.SESSION_FIELD_DNIS,
			IProjectVariables.SESSION_FIELD_EXIT_CUSTOMER_ID,
			IProjectVariables.SESSION_FIELD_EXIT_INFO_1,
			IProjectVariables.SESSION_FIELD_EXIT_INFO_2,
			IProjectVariables.SESSION_FIELD_EXIT_PARENT_ID,
			IProjectVariables.SESSION_FIELD_EXIT_PREFERRED_PATH,
			IProjectVariables.SESSION_FIELD_EXIT_REASON,
			IProjectVariables.SESSION_FIELD_EXIT_TOPIC,
			IProjectVariables.SESSION_FIELD_LASTERROR,
			IProjectVariables.SESSION_FIELD_MEDIATYPE,
			IProjectVariables.SESSION_FIELD_PROTOCOLNAME,
			IProjectVariables.SESSION_FIELD_PROTOCOLVERSION,
			IProjectVariables.SESSION_FIELD_SESSIONID,
			IProjectVariables.SESSION_FIELD_SESSIONLABEL,
			IProjectVariables.SESSION_FIELD_SHAREDMODE,
			IProjectVariables.SESSION_FIELD_UCID,
			IProjectVariables.SESSION_FIELD_UUI,
			IProjectVariables.SESSION_FIELD_VIDEOBITRATE,
			IProjectVariables.SESSION_FIELD_VIDEOCODEC,
			IProjectVariables.SESSION_FIELD_VIDEOENABLED,
			IProjectVariables.SESSION_FIELD_VIDEOFARFMTP,
			IProjectVariables.SESSION_FIELD_VIDEOFORMAT,
			IProjectVariables.SESSION_FIELD_VIDEOFPS,
			IProjectVariables.SESSION_FIELD_VIDEOHEIGHT,
			IProjectVariables.SESSION_FIELD_VIDEONEARFMTP,
			IProjectVariables.SESSION_FIELD_VIDEOWIDTH,
			IProjectVariables.SESSION_FIELD_VPCALLEDEXTENSION,
			IProjectVariables.SESSION_FIELD_VPCONVERSEONDATA,
			IProjectVariables.SESSION_FIELD_VPCOVERAGEREASON,
			IProjectVariables.SESSION_FIELD_VPCOVERAGETYPE,
			IProjectVariables.SESSION_FIELD_VPRDNIS,
			IProjectVariables.SESSION_FIELD_VPREPORTURL };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.SESSION, variableFields, null, session, false, true );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.ANI, "8976589056", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.API_FAILURE_COUNT, "0", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ENT_NEW_PIN_FIELD_CONFIDENCE,
			IProjectVariables.ENT_NEW_PIN_FIELD_INPUTMODE,
			IProjectVariables.ENT_NEW_PIN_FIELD_INTERPRETATION,
			IProjectVariables.ENT_NEW_PIN_FIELD_NOINPUTCOUNT,
			IProjectVariables.ENT_NEW_PIN_FIELD_NOMATCHCOUNT,
			IProjectVariables.ENT_NEW_PIN_FIELD_UTTERANCE,
			IProjectVariables.ENT_NEW_PIN_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ENT_NEW_PIN, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.DD_LAST_EXCEPTION_FIELD_ERRORCODE,
			IProjectVariables.DD_LAST_EXCEPTION_FIELD_MESSAGE,
			IProjectVariables.DD_LAST_EXCEPTION_FIELD_OBJECT,
			IProjectVariables.DD_LAST_EXCEPTION_FIELD_STACKTRACE,
			IProjectVariables.DD_LAST_EXCEPTION_FIELD_TYPE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.DD_LAST_EXCEPTION, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ENT_OPT_FIELD_CONFIDENCE,
			IProjectVariables.ENT_OPT_FIELD_INPUTMODE,
			IProjectVariables.ENT_OPT_FIELD_INTERPRETATION,
			IProjectVariables.ENT_OPT_FIELD_NOINPUTCOUNT,
			IProjectVariables.ENT_OPT_FIELD_NOMATCHCOUNT,
			IProjectVariables.ENT_OPT_FIELD_UTTERANCE,
			IProjectVariables.ENT_OPT_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ENT_OPT, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.START_MIN, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.LANGUAGE_MENU_FIELD_CONFIDENCE,
			IProjectVariables.LANGUAGE_MENU_FIELD_INPUTMODE,
			IProjectVariables.LANGUAGE_MENU_FIELD_INTERPRETATION,
			IProjectVariables.LANGUAGE_MENU_FIELD_NOINPUTCOUNT,
			IProjectVariables.LANGUAGE_MENU_FIELD_NOMATCHCOUNT,
			IProjectVariables.LANGUAGE_MENU_FIELD_UTTERANCE,
			IProjectVariables.LANGUAGE_MENU_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.LANGUAGE_MENU, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.TIME_FIELD_AUDIO,
			IProjectVariables.TIME_FIELD_HOUR,
			IProjectVariables.TIME_FIELD_MILLISECOND,
			IProjectVariables.TIME_FIELD_MINUTE,
			IProjectVariables.TIME_FIELD_SECOND,
			IProjectVariables.TIME_FIELD_TIMEZONE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.TIME, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.VALIDATE_PIN_COUNT, "0", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.SHAREDUUI_FIELD_ID,
			IProjectVariables.SHAREDUUI_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.SHAREDUUI, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.NMCOUNT, "", null, session, false, false );
		session.putVariable(variable);
	}
	/**
	 * This method returns the name of the application.
	 * Last generated by Orchestration Designer at: 2024-FEB-08  04:57:48 PM
	 */
	public String getEntryName() {
		return("SampleBankingDemo");
	}
	/**
	 * This method returns a list of life cycle classes for Pluggable Connectors.
	 * Last generated by Orchestration Designer at: 2024-FEB-08  04:57:48 PM
	 */
	public java.util.Collection getPluggableLifeCycle() {
		java.util.ArrayList result = new java.util.ArrayList();
		return(result);
	}
	/**
	 * This method returns a list of VXML contributor classes for Pluggable Connectors.
	 * Last generated by Orchestration Designer at: 2024-FEB-08  04:57:48 PM
	 */
	public java.util.Collection getPluggableVXMLContrib() {
		java.util.ArrayList result = new java.util.ArrayList();
		return(result);
	}
	/**
	 * This method returns the root document for the application.
	 * This method is generated automatically and should not be modified
	 * because changes may be overwritten by future code generation.
	 * Last generated by Orchestration Designer at: 2024-FEB-08  04:57:48 PM
	 */
	public String getRootDoc() {
		return("AppRoot");
	}
	/**
	 * This method returns a boolean to indicate if the approot node has a web page to show.
	 * This method is generated automatically and should not be modified
	 * because changes may be overwritten by future code generation.
	 * Last generated by Orchestration Designer at: 2024-FEB-08  04:57:48 PM
	 */
	public boolean hasWebPage(com.avaya.sce.runtimecommon.SCESession mySession) {
		return false;
	}
	/**
	 * Builds the list of input parameters that are defined for this application 
	 * entry.  This list is built automatically by adding Input Parameter
	 * nodes to AppRoot in the call flow editor.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.
	 *
	 * @return a Collection of <code>java.lang.String</code> objects that
	 * are the names of parameters the application is expecting.
	 * If the AppRoot node does not have any input parameters, then 
	 * this returns an empty list
	 * Last generated by Orchestration Designer at: 2024-FEB-08  04:57:48 PM
	 */
	public java.util.Collection getInputParams(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		list = new java.util.ArrayList();

		return list;
	}
	/**
	 * Builds the list of capture expression that are defined for this application 
	 * entry.  This list is built automatically by adding Capture Expression
	 * items to AppRoot in the call flow editor.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.
	 *
	 * @return a Collection of <code>CaptureExpression</code> objects that
	 * specify the ECMA script expression and the Orchestration Designer 
	 * session variable that will store the captured result.
	 * If the AppRoot node does not have any capture expression items, then 
	 * this returns an empty list
	 * Last generated by Orchestration Designer at: 2024-FEB-08  04:57:48 PM
	 */
	public java.util.Collection getCaptureExpressions(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		list = new java.util.ArrayList();

		return list;
	}
}
